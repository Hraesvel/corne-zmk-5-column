/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
};

&lt {
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34>;
        };

        combo_one_hand_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <36 37>;
        };

        combo_one_hand_alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <37 38>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // ------------------------------------------------------------------------
            // |  TAB -  Q  |  W  |  E  |  R  |  T  ||||  Y  |  U   |  I  |  O  |  P  |
            // | CTRL -  A  |  S  |  D  |  F  |  G  ||||  H  |  J   |  K  |  L  |  ;  |  
            // | SHFT -  Z  |  X  |  C  |  V  |  B  ||||  N  |  M   |  ,  |  .  |  /  | 
            //                    | GUI | LWR | SPC |||| ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E             &kp R         &lt 1 T      &lt 1 Y      &kp U          &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D             &kp F         &kp G        &kp H        &kp J          &kp K      &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C             &kp V         &kp B        &kp N        &kp M          &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp LEFT_CONTROL  &kp LEFT_GUI  &kp SPACE    &lt 2 ENTER  &kp RIGHT_ALT  &lt 3 DEL
            >;
        };

        numsym_layer {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4     |  5      |   |  6     |  7     |  8   |  9  |  0   |
            // | BT1 | BT2 | BT3 | BT4    | BT5     |   | LFT    | DWN    |  UP  | RGT |      |
            // | BT_C| BT_P| BT_N|C_BRI_DN| C_BRI_UP|   |C_VOL_UP|C_VOL_DN|C_MUTE|     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4        &kp N5           &kp N6     &kp N7         &kp N8            &kp N9            &kp N0             &trans
&trans  &kp N4  &kp N5  &kp N6  &kp DOT       &kp GRAVE        &kp SQT    &kp MINUS      &kp EQUAL         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &kp N7  &kp N8  &kp N9  &kp NUMBER_0  &kp BACKSLASH    &kp SLASH  &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans
                        &trans  &trans        &trans           &trans     &trans         &trans
            >;
        };

        fun_layer {
            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | 
            // |  `  |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  | 
            // |  ~  |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" | 
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1  &kp F4  &kp F7  &kp F10  &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp C_AL_PREV_TASK  &kp UP_ARROW    &kp C_AL_NEXT_TASK  &kp C_AL_TASK_MANAGER  &trans
&trans  &kp F2  &kp F5  &kp F8  &kp F11  &kp C_MUTE      &kp LS(C_PLAY_PAUSE)  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW     &kp PAGE_UP            &trans
&trans  &kp F3  &kp F6  &kp F9  &kp F12  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp C_AC_ZOOM_IN    &kp HOME        &kp C_AC_ZOOM_OUT   &kp PAGE_DOWN          &trans
                        &trans  &trans   &trans          &trans                &trans              &trans
            >;
        };

        sys_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |    |     |     |     |  |    |    |    |     | BKSP |
            // | CTRL |    |     |     |     |  |    |    |    |     |  '   |
            // | SHFT |    |     |     |     |  |    |    |    |     |  ESC |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none         &none         &none         &none         &bt BT_CLR      &bootloader  &trans         &trans          &trans        &trans         &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans       &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_CUT  &kp C_AC_UNDO  &trans
&trans  &none         &none         &none         &bt BT_PRV    &bt BT_NXT      &sys_reset   &trans         &trans          &trans        &trans         &trans
                                    &trans        &trans        &trans          &trans       &trans         &trans
            >;
        };
    };
};
