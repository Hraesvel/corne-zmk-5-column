/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
};

&lt {
    tapping-term-ms = <400>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34>;
        };

        fun_layer_mo {
            bindings = <&mo 3>;
            key-positions = <38 39>;
        };

        layer_2_combo {
            bindings = <&mo 2>;
            key-positions = <36 37>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // ------------------------------------------------------------------------
            // |   Q   |  W  |  E  |  R  |  T  ||||  Y  |  U   |  I  |  O  |  P  |
            // |   A   |  S  |  D  |  F  |  G  ||||  H  |  J   |  K  |  L  |  ;  |  
            // |   Z   |  X  |  C  |  V  |  B  ||||  N  |  M   |  ,  |  .  |  /  | 
            //              | CTRL | GUI | SPC |||| ENT | ALT  | DEL |

            bindings = <
&none  &kp Q  &kp W  &kp F             &kp P         &kp B        &kp J        &kp L                      &kp U          &kp Y    &kp SEMICOLON  &none
&none  &kp A  &kp R  &kp S             &kp T         &kp G        &kp M        &kp N                      &kp E          &kp I    &kp O          &none
&none  &kp Z  &kp X  &kp C             &kp D         &kp V        &kp K        &kp H                      &kp COMMA      &kp DOT  &kp FSLH       &none
                     &kp LEFT_CONTROL  &kp LEFT_GUI  &kp SPACE    &lt 1 ENTER  &mt RIGHT_SHIFT BACKSPACE  &kp RIGHT_ALT
            >;
        };

        numsym_layer {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4        &kp N5           &kp N6     &kp N7          &kp N8            &kp N9            &kp N0             &trans
&trans  &kp N4  &kp N5  &kp N6  &kp DOT       &kp GRAVE        &kp SQT    &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &kp N7  &kp N8  &kp N9  &kp NUMBER_0  &kp BACKSLASH    &kp SLASH  &kp LESS_THAN   &kp GREATER_THAN  &kp MINUS         &kp EQUAL          &trans
                        &trans  &trans        &trans           &trans     &trans          &trans
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F1  &kp F4  &kp F7  &kp F10  &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp V           &kp UP_ARROW    &kp Y            &kp C          &trans
&trans  &kp F2  &kp F5  &kp F8  &kp F11  &kp C_MUTE      &kp C_PLAY_PAUSE      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_UP    &trans
&trans  &kp F3  &kp F6  &kp F9  &kp F12  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp D           &kp I           &kp DOT          &kp PAGE_DOWN  &trans
                        &trans  &trans   &trans          &trans                &trans          &trans
            >;
        };

        sys_layer {
            bindings = <
&trans  &kp EXCL      &kp AT        &kp POUND     &kp DOLLAR    &kp PERCENT     &kp CARET    &kp AMPS       &kp ASTRK       &kp LPAR      &kp RPAR       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bootloader  &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_CUT  &kp C_AC_UNDO  &trans
&trans  &bt BT_CLR    &none         &bt BT_PRV    &bt BT_NXT    &trans          &sys_reset   &trans         &trans          &trans        &trans         &trans
                                    &trans        &trans        &trans          &trans       &trans         &trans
            >;
        };
    };
};
